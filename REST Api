// index.js file
const express = require('express');
const bodyParser = require('body-parser');
const mongoose=require('mongoose');

//set up express app
const app = express();

//connect to mongodb
mongoose.connect('mongodb://localhost/xennongo');
mongoose.Promise=global.Promise;

app.use(bodyParser.json());
//initialize routes
app.use('/api',require('./routes/api'));

//error handling middleware
app.use(function(err, req,res,next){
  //console.log(err);
  res.status(422).send({error:err.message});
});
//listen for request
app.listen(process.env.port || 4000,function(){
console.log('now listening for requests');
});




//employer.js file
const mongoose=require('mongoose');
const Schema = mongoose.Schema;

//create employer Schema & model
const EmployerSchema = new Schema({
  name: {
    type:String,
    required:[true, 'Name field is requierd']
  },
  level:{
    type:String
  },
  available:{
    type:Boolean,
    default:false
  },
  admin:{
    type:Boolean,
    default:false
  },
  objective:{
    type:String
  },
  keyResult:{
    type:String
  },
  member:{
    type:String,
    required:[true, 'Name field is requierd']
  }

});

const Employer = mongoose.model('employer',EmployerSchema);
module.exports=Employer;




//api.js fie
const express = require('express');
const router = express.Router();
const Employer = require('../models/employer');


//get a list of xennon workers  from database
router.get('/xennon',function(req,res,next){

Employer.find({}).then(function(employer){
  res.send(employer);
});

});

// add a new worker to the database
router.post('/xennon',function(req,res,next){

 Employer.create(req.body).then(function(employer){
  res.send(employer);
    
}).catch(next);

});

//update a new worker salary
router.put('/xennon/:id',function(req,res,next){
  Employer.findByIdAndUpdate({_id:req.params.id},req.body).then(function(){
    Employer.findOne({_id:req.params.id}).then(function(employer){
      res.send(employer);
    });

  });
  
});

//delete a worker from database
router.delete('/xennon/:id',function(req,res,next){
Employer.findByIdAndRemove({_id:req.params.id}).then(function(employer){
  res.send(employer);
});


});
module.exports=router;

